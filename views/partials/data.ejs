<style>
    #container,
    #buttondiv {
        margin: 0 auto;
        width: 80%;
        overflow: auto;
    }

    div.gridtable {
        margin: 0 auto;
        width: 95%;
        overflow: auto;
        font-family: helvetica, arial, sans-serif;
        font-size: 14px;
        color: #333333;
        border-width: 1px;
        border-color: #666666;
        border-collapse: collapse;
        text-align: center;
    }

    div.gridtable th {
        border-width: 1px;
        padding: 8px;
        border-style: solid;
        border-color: #666666;
        background-color: #F6B4A5;
    }

    div.gridtable td {
        border-width: 1px;
        padding: 8px;
        border-style: solid;
        border-color: #666666;
    }

    .badrowcount {
        background-color: coral;
    }

    .notnumeric {
        background-color: yellow;
    }
</style>




<div id="buttondiv">
    <input type="file" id="inputfile" />
    <input type="button" id="viewfile" value="Import file" />
    <br><br>
</div>
<div class="container" id="container">
    <div class="gridtable" id="tableMain">

    </div>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script>
    $(document).ready(function () {
        $('#viewfile').click(function () {
            var rdr = new FileReader();
            rdr.onload = function (e) {
                var content = e.target.result;
                e.preventDefault();
                fetch('http://localhost:4000/diagnosis', {
                        method: 'POST',
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify({
                            content: content,
                        })
                    })
                    .then(res => res.json())
                    .then(function (data) {

                        const keyRows = Object.keys(data);
                        const numberOfKeys = keyRows.length;
                        const numberOfAlgorithms = (numberOfKeys / 2);

                        const firstHalfKeyRows = keyRows.slice(0, numberOfAlgorithms);
                        const secondHalfKeyRows = keyRows.slice(numberOfAlgorithms, keyRows
                            .length);

                        putHeaderIntoTable("Algorithm", "Mean", "Std.");
                        putDataIntoTable(data, firstHalfKeyRows);

                        putHeaderIntoTable("Algorithm", "matrix confusion");
                        putDataIntoTable(data, secondHalfKeyRows);

                    })
            }
            rdr.readAsText($("#inputfile")[0].files[0]);
        });
    });

    let table = $("<table></table>");

    function putHeaderIntoTable() {

        let thead = "";
        thead += "<thead><tr class='tableheader'>"; // open tags
        for (var i = 0; i < arguments.length; i++) {
            thead += "<th>" + arguments[i] + "</th>";
        }
        thead += "</tr></thead>"; // close tags
        table.append(thead);
    }

    function putDataIntoTable(data, keysToPut) {
        const keyRows = Object.keys(data);
        const numberOfKeys = keyRows.length;
        const numberOfAlgorithms = (numberOfKeys / 2) + 1;

        for (const key in data) {
            var newrow = "";
            //get the line into an array
            var line = data[key].split(" ");
            console.log(line);

            //get number of line
            var numberOfItemsInLine = line.length;

            // check if line is not empty
            if (numberOfItemsInLine > 0 && keysToPut.indexOf(key) != -1) {
                newrow += "<tr>"; // open tag
                newrow += "<td>" + key + "</td>";

                if (key.indexOf("matrix") != -1) {               
                    newrow += "<td>";
                    for (var col = 0; col < numberOfItemsInLine; col++) {
                        if (line[col].length > 0) {
                            if(line[col].indexOf("]") != -1){
                                newrow += " " + line[col];
                                newrow += "<br>";    
                                continue;
                            }                           
                            newrow += " " + line[col];
                        }
                    }
                    newrow +=  "</td>"
                } else {
                    for (var col = 0; col < numberOfItemsInLine; col++) {
                        if (line[col].length > 0) {
                            newrow += "<td>" + line[col] + "</td>";
                        }
                    }
                }
                newrow += "</tr>"; // close tag
            }
            table.append(newrow);
        }
        console.log(table);
        table.append("<br>")
        $('#tableMain').append(table);
        table = $("<table></table>")
    }
</script>